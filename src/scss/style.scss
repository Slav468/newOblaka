@use "sass:math";

// Миксины ========================
@import "base/mixins";

// Шрифты ========================

// ЛОкальный шрифт
@import "fonts/fonts";

// Иконочный шрифт =========================
// Из файла иконочного шрифта
// @import 'fonts/icons';

// Настройки шаблона ===================

// Шрифт по умолчанию =====================
$fontFamily: "Montserrat";
$fontSize: toRem(15); // размер шрифта из макета

// Основной цвет
$mainColor: var(--text-primary); // цвет шрифта по умолчанию

// Палитра и переменные
@import "base/colors-palette";
@import "base/variables";
@import "base/range";

// Адаптивная сетка =========================

// Минимальная ширина страницы
$minWidth: 320;
// Ширина полотна (макета)
$maxWidth: 1920;
// Ширина ограничивающего контейнера (0 = нету)
$maxWidthContainer: 1660;

// Общий отступ внутри ограничивающего контейнера
// (30 = по 15px слева и справа, 0 = нету)
$containerPadding: 20;

// Ширина сработки первого брейк-поинта
$containerWidth: $maxWidthContainer + $containerPadding;

// брейк-поинты
$pc: toEm($containerWidth); // ПК,
$tablet: toEm(991.98); // Планшеты
$mobile: toEm(767.98); // Телефоны L
$mobileSmall: toEm(479.98); // Телефоны S

// Тип адаптива:
// 1 = чувствительная (в контейнере нет брейк поинтов),
// 2 = по брейк поинтам (контейнер меняет свою ширину по брейк поинтам)
$responsiveType: 1;

// Обнуление ==============================================
@import "base/null";

// Подключение компонентов tailwind ===============
// @import "libs/tailwind";

// Стили тега BODY =======================
body {
	// Scroll заблокирован
	.lock & {
		overflow: hidden;
		touch-action: none;
		overscroll-behavior: none;
	}
	// Сайт загружен
	.loaded & {
	}

	& * {
		text-wrap: balance;
	}
}
// Оболочка wrapper ============================
.wrapper {
	position: relative;
	min-height: 100%;
	display: flex;
	flex-direction: column;
	scrollbar-gutter: stable;

	@supports (overflow: clip) {
		overflow: clip;
	}
	// Прижатый footer
	> main {
		flex: 1 1 auto;
	}
	// Фикс для слайдеров
	> * {
		min-width: 0;
	}

	&:has(.main + section) {
		.main {
			&__container {
				margin-bottom: toRem(40);
			}
		}
	}
}
// Ограничивающий контейнер ====================

@if ($responsiveType==1) {
	// Чувствительный
	[class*="__container"] {
		@if ($maxWidthContainer>0) {
			max-width: toRem($containerWidth);
			margin: 0 auto;
		}
		@if ($containerPadding>0) {
			@if ($maxWidthContainer>0) {
				padding: 0 toRem(math.div($containerPadding, 2));
			} @else {
				@include adaptiveValue("padding-left", math.div($containerPadding, 2), 15);
				@include adaptiveValue("padding-right", math.div($containerPadding, 2), 15);
			}
		}
	}
} @else {
	// Брейк-поинт
	[class*="__container"] {
		margin: 0 auto;
		@if ($maxWidthContainer>0) {
			max-width: toRem($containerWidth);
		} @else {
			@if ($containerPadding>0) {
				padding: 0 toRem(math.div($containerPadding, 2));
			}
		}
		@media (max-width: $pc) {
			max-width: toRem(970);
		}
		@media (max-width: $tablet) {
			max-width: toRem(750);
		}
		@media (max-width: $mobile) {
			max-width: none;
			@if ($containerPadding>0 and $maxWidthContainer>0) {
				padding: 0 toRem(math.div($containerPadding, 2));
			}
		}
	}
}

[class*="--gc"] {
	@include gridContainer();
}

// Подключение базовых стилей
@import "base";
@import "base/paging";
@import "./libs/swiper";

// Подключение общих стилей
@import "common";
@import "elements";
@import "icons-style";

// Подключение стилей отдельных блоков
@import "header";
@import "base/menu";
@import "./components/components";
@import "./pageBlock/allBlacks";
@import "footer";

// Подключение стилей отдельных страниц
@import "./insidePage/detail-page";
@import "./insidePage/chapter-page";
@import "./insidePage/catalog-details";
@import "./insidePage/404";

// Динамические стили
@import "cardWidthAdaptive";

// Подключение стилей для загрузки блока при scroll
@import "./hidden";
